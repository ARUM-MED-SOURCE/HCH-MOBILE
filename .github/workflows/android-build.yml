name: Android Build

on:
  pull_request:
    types: [opened, synchronize]
    branches: [dev,main]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        
    - name: Install Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 29
        build-tools-version: '29.0.3'
        platform: 'android-29'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 7.6.1
        
    - name: Generate Gradle Wrapper
      run: |
        gradle wrapper --gradle-version 7.6.1
        
    - name: Build with Gradle
      run: |
        .\gradlew.bat assembleRelease
      env:
        ANDROID_HOME: ${{ env.ANDROID_HOME }}
        ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: app/build/outputs/apk/release/*.apk
        
    - name: Run Lint
      run: |
        .\gradlew.bat lint
      env:
        ANDROID_HOME: ${{ env.ANDROID_HOME }}
        ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        
    - name: Notify Slack on Build Status
      if: always()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": "${{ job.status == 'success' && ':white_check_mark:' || ':x:' }} Android CI 빌드 결과\n• 성공 유무: ${{ job.status }}\n• 저장소: ${{ github.repository }}\n• 브랜치: ${{ github.ref_name }}\n\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|빌드된 APK 다운로드 링크>"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING-WEBHOOK 